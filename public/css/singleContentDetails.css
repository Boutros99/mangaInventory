.subContainer {
    display: flex;
    flex: 1;
    align-items: start;
    justify-content: center;
    padding: 50px;
    gap: 50px;
}

.subContainer::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('/images/contentBackgroundImage.jpg'); /* Repeat background image */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    filter: brightness(20%); /* Adjust brightness here */
    z-index: -1; /* Place the pseudo-element behind the content */
}

/* Ensure content is visible above the background */
.subContainer img, .subContainer .detailsContent, .subContainer .buttonsSection{
    position: relative;
    z-index: 1; /* Content stays above the pseudo-element */
}


img {
    flex: 1 1 auto; /* Allow the image to grow and shrink within its container */
    max-width: min(35%,500px) ;
    height: auto;
    max-height: min(60vh,650px);
    object-fit: cover; /* Ensure the image fits within the container without being cropped */
    aspect-ratio:  9/ 16; /* Set the desired aspect ratio */
    border: 5px solid rgb(255, 157, 10); /* Border styling */
    border-radius: 1pc; /* Rounded corners */
  }


.detailsContent{
    flex-shrink: 1;
    max-width: 45%;
    display: flex;
    flex-direction: column;
    gap: 30px;
    color: white;
}

.primaryContent {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

.secondaryContent {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.buttonsSection {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;
    gap: 10px;
    flex-shrink: 0;
}

#revealingButtons { /* only for the first set of buttons so they are not too close to the secondary section */
    margin-top: 50px;
}

.buttonsSection button {
    font-size: 15px;
    width: 80px;
    color: black;
    font-weight: bold;
    border: 2px solid white;
    padding: 10px;
    border-radius: 0.3pc;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

#showDeleteFormButton, .cancelButton{
    background-color: red;
    
}

#showUpdateFormButton, .confirmButton {
    background-color: green;
    
}



.buttonsSection button:hover {
    transform: scale(1.1); /* Increase size by 10% */
    box-shadow: 0 4px 8px rgba(146, 130, 130, 0.2); 

}



/*  specific to manga content */

.mangaInfo {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: 15px;

}
.mangaInfo p {
    background-color: brown;
    color: white;
    font-size: 12px;
    font-weight: bold;
    border: 2px solid white;
    padding: 10px;
    border-radius: 0.8pc;

}


.genreTag {
    background-color: /* rgb(216, 189, 99)*/ rgb(255, 157, 10);
    color: black;
    font-size: 15px;
    font-weight: bold;
    border: 2px solid black;
    padding: 10px;
    border-radius: 0.8pc;
}

.genreTag:hover {
    background-color: white;
    color: black;
    font-weight: bold;
    border: 2px solid rgb(255, 157, 10);
    padding: 10px;
    border-radius: 0.8pc;
}

/*Specific to update and delete password forms*/



/* this is for the Delete form as he changes class depending if we try to input password or not */
#deleteForm.hidden  {
    display: none;
}

#deleteForm.visible  {
    display: block;
}

#updateForm.hidden  {
    display: none;
}

#updateForm.visible  {
    display: block;
}

form { 
    margin-top: 50px;
}